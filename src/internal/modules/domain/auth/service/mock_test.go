// Code generated by MockGen. DO NOT EDIT.
// Source: hospital/internal/modules/domain/auth/service (interfaces: IDoctorRepo)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	dto "hospital/internal/modules/domain/doctor/dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDoctorRepo is a mock of IDoctorRepo interface.
type MockIDoctorRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIDoctorRepoMockRecorder
}

// MockIDoctorRepoMockRecorder is the mock recorder for MockIDoctorRepo.
type MockIDoctorRepoMockRecorder struct {
	mock *MockIDoctorRepo
}

// NewMockIDoctorRepo creates a new mock instance.
func NewMockIDoctorRepo(ctrl *gomock.Controller) *MockIDoctorRepo {
	mock := &MockIDoctorRepo{ctrl: ctrl}
	mock.recorder = &MockIDoctorRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDoctorRepo) EXPECT() *MockIDoctorRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIDoctorRepo) Create(arg0 context.Context, arg1 *dto.CreateDoctor) (*dto.Doctor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*dto.Doctor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIDoctorRepoMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIDoctorRepo)(nil).Create), arg0, arg1)
}

// GetByTokenId mocks base method.
func (m *MockIDoctorRepo) GetByTokenId(arg0 context.Context, arg1 string) (*dto.Doctor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByTokenId", arg0, arg1)
	ret0, _ := ret[0].(*dto.Doctor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByTokenId indicates an expected call of GetByTokenId.
func (mr *MockIDoctorRepoMockRecorder) GetByTokenId(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByTokenId", reflect.TypeOf((*MockIDoctorRepo)(nil).GetByTokenId), arg0, arg1)
}
